const observerOptions = {
	threshold: 0.2,
	rootMargin: '0px 0px -10% 0px'
};

const observer = new IntersectionObserver((entries) => {
	entries.forEach(entry => {
			if (entry.isIntersecting) {
					entry.target.classList.add('aos-animate');

					if (entry.target.parentElement.classList.contains('stats-grid') ||
							entry.target.parentElement.classList.contains('benefits-grid')) {
							const delay = Array.from(entry.target.parentElement.children).indexOf(entry.target) * 100;
							entry.target.style.transitionDelay = `${delay}ms`;
					}
			}
	});
}, observerOptions);

document.querySelectorAll('[data-aos]').forEach(element => {
	observer.observe(element);
});

const hero = document.querySelector('.hero');
const heroContent = document.querySelector('.hero-content');

window.addEventListener('scroll', () => {
	const scrolled = window.pageYOffset;
	const rate = scrolled * 0.5;
	
	hero.style.backgroundPosition = `center ${rate * 0.7}px`;
	
	heroContent.style.transform = `translateY(${rate * 0.2}px)`;
	
	const opacity = 1 - (scrolled / 1000);
	heroContent.style.opacity = opacity > 0 ? opacity : 0;
});

const faqData = [
	{
			question: "How do I join the affiliate program?",
			answer: "Simply click the 'Join Now' button and complete our streamlined registration process. Our team will review your application within 24 hours, and you'll receive immediate access to our affiliate dashboard upon approval."
	},
	{
			question: "When and how do I get paid?",
			 answer: "We process payments automatically on the 1st of each month for the previous month's earnings. We support multiple cryptocurrency payment options including BTC, ETH, SOL, and XRP, with instant transfers and only 1% processing fees."
	},
	{
			question: "What is the minimum payout threshold?",
			answer: "Our minimum payout threshold is $100 for all supported cryptocurrencies. Once you reach this threshold, your earnings are automatically processed in the next payment cycle."
	},
	{
			question: "How is the revenue share calculated?",
			answer: "Revenue share is calculated based on the net gaming revenue (NGR) generated by your referred players. Our tiered system offers up to 45% revenue share, with rates increasing based on your monthly performance."
	},
	{
			question: "How do you track referrals?",
			answer: "We use advanced tracking technology with a 365-day cookie duration. All player activity is tracked in real-time through our secure affiliate dashboard, providing complete transparency."
	}
];

const faqGrid = document.querySelector('.faq-grid');
const faqSearch = document.querySelector('#faqSearch');

function createFaqElement(faq, index) {
	const faqElement = document.createElement('div');
	faqElement.className = 'faq-question';
	faqElement.setAttribute('data-aos', 'fade-right');
	faqElement.style.transitionDelay = `${index * 100}ms`;
	
	faqElement.innerHTML = `
			<h3>${faq.question}</h3>
			<p>${faq.answer}</p>
	`;
	
	return faqElement;
}

function renderFaqs(faqs) {
	faqGrid.innerHTML = '';
	faqs.forEach((faq, index) => {
			faqGrid.appendChild(createFaqElement(faq, index));
	});

	document.querySelectorAll('.faq-question[data-aos]').forEach(element => {
			observer.observe(element);
	});
}

let searchTimeout;
faqSearch.addEventListener('input', (e) => {
	clearTimeout(searchTimeout);
	
	searchTimeout = setTimeout(() => {
			const searchTerm = e.target.value.toLowerCase();
			const filteredFaqs = faqData.filter(faq => 
					faq.question.toLowerCase().includes(searchTerm) || 
					faq.answer.toLowerCase().includes(searchTerm)
			);
			renderFaqs(filteredFaqs);
	}, 300);
});

document.querySelectorAll('a[href^="#"]').forEach(anchor => {
	anchor.addEventListener('click', function (e) {
			e.preventDefault();
			const target = document.querySelector(this.getAttribute('href'));
			if (target) {
					const headerOffset = 100;
					const elementPosition = target.getBoundingClientRect().top;
					const offsetPosition = elementPosition + window.pageYOffset - headerOffset;

					window.scrollTo({
							top: offsetPosition,
							behavior: 'smooth'
					});
			}
	});
});

renderFaqs(faqData);